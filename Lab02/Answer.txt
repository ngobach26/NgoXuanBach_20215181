Q1: When should accessor methods be used

Accessor methods should be used when it is necessary to access or modify an object's internal state from outside the object.

Accessor methods are useful when you want to encapsulate the internal state of an object and provide a controlled interface for other objects to interact with that state. This can help ensure that the object's internal state is not modified in unexpected ways, and can make the object easier to maintain and modify over time.

However, it is important to use accessor methods judiciously and avoid overuse. If you find that you are using a lot of accessor methods to expose an object's internal state, it may be a sign that the object's design needs to be rethought to better encapsulate its state.

Additionally, it is important to use clear and descriptive names for accessor methods to make it clear what they are doing and to make the code more readable.
Q2: If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this?

No, In Java, you cannot have two constructor methods with the same number and type of parameters, even if they have different names. This is because the constructor method is called implicitly when an object is created, so the Java compiler needs to know which constructor method to call based on the number and type of arguments passed in.
